apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: "androidx.navigation.safeargs"
//apply plugin: 'java'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "net.oddware.alcolator"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        useIR = true
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.v_kotlinStdLib"
    implementation "androidx.appcompat:appcompat:$rootProject.v_appCompat"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$rootProject.v_swipeRefreshLayout"
    implementation "androidx.core:core-ktx:$rootProject.v_coreCtx"
    implementation "com.jakewharton.timber:timber:$rootProject.v_timber"
    //implementation "de.codecrafters.tableview:tableview:$rootProject.v_sortableTableView"
    //implementation "com.github.ISchwarz23:SortableTableView:v$rootProject.v_sortableTableView"
    implementation "com.sortabletableview.recyclerview:sortabletableview:$rootProject.v_sortableTableView"

    //implementation "com.google.code.gson:gson:$rootProject.v_gson"
    // switching over from gson to kotlinx serialization json
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$rootProject.v_kxsJson"
    //implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //implementation 'androidx.wear:wear:1.0.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.v_constraintLayout"
    implementation "com.google.android.material:material:$rootProject.v_material"

    implementation "androidx.room:room-runtime:$rootProject.v_room"
    //compileOnly 'com.google.android.wearable:wearable:2.6.0'
    kapt "androidx.room:room-compiler:$rootProject.v_room" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$rootProject.v_room"
    //kapt "androidx.room:room-ktx:$rootProject.v_room"
    // optional - RxJava support for Room
    //implementation "androidx.room:room-rxjava2:$rootProject.v_room"
    // optional - Guava support for Room, including Optional and ListenableFuture
    //implementation "androidx.room:room-guava:$rootProject.v_room"
    // Test helpers
    testImplementation "androidx.room:room-testing:$rootProject.v_room"

    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.v_androidxArch"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.v_archLifeCycle"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.v_archLifeCycle"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$rootProject.v_archLifeCycle"
    // Jetpack Compose Integration for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$rootProject.v_viewModelCompose"
    // Annotation processor
    //kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.v_archLifeCycle"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.v_archLifeCycle"
    // optional - helpers for implementing LifecycleOwner in a Service
    //implementation "androidx.lifecycle:lifecycle-service:$rootProject.v_archLifeCycle"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$rootProject.v_archLifeCycle"
    // optional - ReactiveStreams support for LiveData
    //implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$rootProject.v_archLifeCycle"
    // optional - Test helpers for LiveData
    //testImplementation "androidx.arch.core:core-testing:$arch_version"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.v_coroutines"

    // Testing
    //androidTestImplementation "androidx.arch.core:core-testing:$rootProject.v_coreTesting"

    // Jetpack Navigation stuff

    // Java language implementation
    //implementation "androidx.navigation:navigation-fragment:$rootProject.v_jetpackNav"
    //implementation "androidx.navigation:navigation-ui:$rootProject.v_jetpackNav"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.v_jetpackNav"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.v_jetpackNav"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$rootProject.v_jetpackNav"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$rootProject.v_jetpackNav"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$rootProject.v_jetpackNavCompose"
}
