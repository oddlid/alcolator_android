apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'java'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "net.oddware.alcolator"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.v_kotlinStdLib"
    implementation "androidx.appcompat:appcompat:$rootProject.v_appCompat"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$rootProject.v_swipeRefreshLayout"
    implementation "androidx.core:core-ktx:$rootProject.v_coreCtx"
    implementation "com.jakewharton.timber:timber:$rootProject.v_timber"
    //implementation "de.codecrafters.tableview:tableview:$rootProject.v_sortableTableView"
    //implementation "com.github.ISchwarz23:SortableTableView:v$rootProject.v_sortableTableView"
    implementation "com.sortabletableview.recyclerview:sortabletableview:$rootProject.v_sortableTableView"
    implementation "com.google.code.gson:gson:$rootProject.v_gson"
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.v_constraintLayout"
    implementation "com.google.android.material:material:$rootProject.v_material"

    implementation "androidx.room:room-runtime:$rootProject.v_room"
    kapt "androidx.room:room-compiler:$rootProject.v_room" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$rootProject.v_room"
    // optional - RxJava support for Room
    //implementation "androidx.room:room-rxjava2:$rootProject.v_room"
    // optional - Guava support for Room, including Optional and ListenableFuture
    //implementation "androidx.room:room-guava:$rootProject.v_room"
    // Test helpers
    testImplementation "androidx.room:room-testing:$rootProject.v_room"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.v_archLifeCycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.v_archLifeCycle"
    implementation "android.arch.lifecycle:common-java8:$rootProject.v_lifeCycle_CommonJ8" // recommended over the above
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.v_androidxArch"

    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.v_archLifeCycle"
    //implementation "android.arch.lifecycle:extensions:$rootProject.v_archLifeCycle"
    //kapt "android.arch.lifecycle:compiler:$rootProject.v_archLifeCycle"

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.v_coroutines"

    // Testing
    //androidTestImplementation "androidx.arch.core:core-testing:$rootProject.v_coreTesting"
}
